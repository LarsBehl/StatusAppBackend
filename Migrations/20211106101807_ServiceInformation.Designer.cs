// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StatusAppBackend.Database;

namespace StatusAppBackend.Migrations
{
    [DbContext(typeof(StatusAppContext))]
    [Migration("20211106101807_ServiceInformation")]
    partial class ServiceInformation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("StatusAppBackend.Database.Model.Service", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Key");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Key = 1,
                            Name = "Steam Server Info",
                            Url = "https://api.steampowered.com/ISteamWebAPIUtil/GetServerInfo/v1/"
                        },
                        new
                        {
                            Key = 2,
                            Name = "GitHub API",
                            Url = "https://api.github.com"
                        });
                });

            modelBuilder.Entity("StatusAppBackend.Database.Model.ServiceInformation", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("ResponseTime")
                        .HasColumnType("double precision");

                    b.Property<int>("ServiceKey")
                        .HasColumnType("integer");

                    b.Property<int>("StatusCode")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeRequested")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Key");

                    b.HasIndex("ServiceKey");

                    b.ToTable("ServiceInformations");
                });

            modelBuilder.Entity("StatusAppBackend.Database.Model.ServiceInformation", b =>
                {
                    b.HasOne("StatusAppBackend.Database.Model.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");
                });
#pragma warning restore 612, 618
        }
    }
}
